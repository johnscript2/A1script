-- CRUMBLE COOKIEüç™ - MM2 Auto Farm PRO v3.3 (ULTIMATE FIX) + HITBOX & UNDERGROUND FARM
-- –ü–æ–ª–Ω—ã–π –∞–≤—Ç–æ—Ñ–∞—Ä–º —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤—Å–µ—Ö –±–∞–≥–æ–≤ + —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Ö–∏—Ç–±–æ–∫—Å—ã –∏ –ø–æ–¥–∑–µ–º–Ω—ã–π —Ñ–∞—Ä–º

if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local COLLECTION_SPEED = 0.05
local TELEPORT_DISTANCE = 150
local MOVEMENT_SPEED = 25
local RARE_EGG_ATTEMPT_TIME = 2
local JUMP_HEIGHT = 1.5
local JUMP_COOLDOWN = 0.6
local JUMP_CHECK_DISTANCE = 5
local JUMP_ATTEMPTS = 3
local HITBOX_SIZE = Vector3.new(10, 10, 10) -- –†–∞–∑–º–µ—Ä —Ö–∏—Ç–±–æ–∫—Å–∞
local UNDERGROUND_OFFSET = -50 -- –ù–∞—Å–∫–æ–ª—å–∫–æ –≥–ª—É–±–æ–∫–æ –ø–æ–¥ –ø–æ–ª–æ–º –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –ø–µ—Ä—Å–æ–Ω–∞–∂
local UNDERGROUND_FARMING = true -- –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –ø–æ–¥–∑–µ–º–Ω—ã–π —Ñ–∞—Ä–º

-- –¶–≤–µ—Ç–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
local BLACK_MAIN = Color3.fromRGB(25, 25, 25)
local PINK_ACCENT = Color3.fromRGB(255, 105, 180)
local WHITE_TEXT = Color3.fromRGB(255, 255, 255)
local DARK_GRAY_HEADER = Color3.fromRGB(40, 40, 40)
local RED_CLOSE = Color3.fromRGB(255, 80, 80)
local GRAY_NOTE = Color3.fromRGB(170, 170, 170)

if _G.AutoFarmMM2IsLoaded then return end
_G.AutoFarmMM2IsLoaded = true

-- –°–µ—Ä–≤–∏—Å—ã
local Player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local CoinCollectedEvent = game.ReplicatedStorage.Remotes.Gameplay.CoinCollected
local RoundStartEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundStart
local RoundEndEvent = game.ReplicatedStorage.Remotes.Gameplay.RoundEndFade
local autofarmstopevent = Instance.new("BindableEvent")

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
local AutofarmStarted = false
local AutofarmIN = false
local LastJumpTime = 0
local RareEggsF = false
local SavePartPos = nil
local FullEggBag = false
local CurrentCoinTypes = {}
local CollectedCoins = {}
local NeededCoinTypes = {}
local ESPEnabled = false
local roles = {}
local activeFarmButton = nil
local currentTween = nil
local processedEggs = {}
local isAttemptingRareEgg = false
local LastCoinTouchTime = 0

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CrumbleCookieMM2"
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 300, 0, 350)
MainFrame.AnchorPoint = Vector2.new(1, 0)
MainFrame.Position = UDim2.new(1, -10, 0, 10)
MainFrame.BackgroundColor3 = BLACK_MAIN
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = DARK_GRAY_HEADER
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(0.7, 0, 1, 0)
Title.Position = UDim2.new(0.05, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "CRUMBLE COOKIEüç™"
Title.TextColor3 = WHITE_TEXT
Title.Font = Enum.Font.FredokaOne
Title.TextSize = 18
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Center
Title.Parent = TitleBar

local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
MinimizeButton.BackgroundColor3 = DARK_GRAY_HEADER
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = WHITE_TEXT
MinimizeButton.Font = Enum.Font.FredokaOne
MinimizeButton.TextSize = 18
MinimizeButton.TextYAlignment = Enum.TextYAlignment.Center
MinimizeButton.Parent = TitleBar

local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 12)
MinimizeCorner.Parent = MinimizeButton

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = DARK_GRAY_HEADER
CloseButton.Text = "X"
CloseButton.TextColor3 = RED_CLOSE
CloseButton.Font = Enum.Font.FredokaOne
CloseButton.TextSize = 18
CloseButton.TextYAlignment = Enum.TextYAlignment.Center
CloseButton.Parent = TitleBar

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 12)
CloseCorner.Parent = CloseButton

-- –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è GUI
local isMinimized = false
local originalSize = MainFrame.Size
local minimizedSize = UDim2.new(0, 300, 0, 30)
local childrenVisibility = {}

local function ToggleMinimize()
    isMinimized = not isMinimized
    if isMinimized then
        for _, child in ipairs(MainFrame:GetChildren()) do
            if child ~= TitleBar and child ~= UICorner then
                childrenVisibility[child] = child.Visible
                child.Visible = false
            end
        end
        MainFrame.Size = minimizedSize
    else
        MainFrame.Size = originalSize
        for child, visible in pairs(childrenVisibility) do
            child.Visible = visible
        end
        childrenVisibility = {}
    end
end

MinimizeButton.MouseButton1Click:Connect(ToggleMinimize)

-- –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ GUI
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    MainFrame.Position = newPos
end

TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TitleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
local function AntiAFK()
    local VirtualUser = game:GetService("VirtualUser")
    Player.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end
end

local function returncoincontaier()
    for _, v in workspace:GetChildren() do
        if v:FindFirstChild("CoinContainer") and v:IsA("Model") then
            return v:FindFirstChild("CoinContainer")
        end
    end
    return false
end

local function CreateSavePart()
    local w = Instance.new("Part")
    w.Size = Vector3.new(12, 1, 12)
    w.Position = Player.Character.HumanoidRootPart.Position + Vector3.new(0, 120, 0)
    w.Transparency = 1
    w.Anchored = true
    w.CanCollide = false
    w.Parent = workspace
    SavePartPos = w.CFrame * CFrame.new(0, 6, 0)
end

local function PcallTP(Position)
    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        if currentTween then
            currentTween:Cancel()
            currentTween = nil
        end
        
        -- –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω –ø–æ–¥–∑–µ–º–Ω—ã–π —Ñ–∞—Ä–º –∏ –∏–¥–µ—Ç –∞–≤—Ç–æ—Ñ–∞—Ä–º
        if UNDERGROUND_FARMING and AutofarmIN then
            Position = Position + Vector3.new(0, UNDERGROUND_OFFSET, 0)
        end
        
        Player.Character.HumanoidRootPart.CFrame = Position
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Ö–∏—Ç–±–æ–∫—Å–æ–≤
local function UpdateHitboxes()
    if not Player.Character then return end
    
    -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ö–∏—Ç–±–æ–∫—Å—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    for _, v in pairs(Player.Character:GetDescendants()) do
        if v.Name == "AutoFarmHitbox" then
            v:Destroy()
        end
    end
    
    -- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ö–∏—Ç–±–æ–∫—Å—ã –¥–ª—è –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞
    for _, part in pairs(Player.Character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            local hitbox = Instance.new("Part")
            hitbox.Name = "AutoFarmHitbox"
            hitbox.Size = HITBOX_SIZE
            hitbox.Transparency = 1
            hitbox.CanCollide = false
            hitbox.Anchored = false
            hitbox.Parent = part
            
            local weld = Instance.new("WeldConstraint")
            weld.Part0 = part
            weld.Part1 = hitbox
            weld.Parent = hitbox
        end
    end
end

local function FindNearestCoin(container)
    local coins = {}
    
    for _, v in pairs(container:GetChildren()) do
        if v:FindFirstChild("TouchInterest") then
            local coinType = v:GetAttribute("CoinID")
            if NeededCoinTypes[coinType] and 
               (not CollectedCoins[coinType] or 
                CollectedCoins[coinType].current < CollectedCoins[coinType].max) then
                if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                    local distance = (Player.Character.HumanoidRootPart.Position - v.Position).Magnitude
                    table.insert(coins, {
                        coin = v,
                        distance = distance,
                        type = coinType
                    })
                end
            end
        end
    end
    
    table.sort(coins, function(a, b)
        return a.distance < b.distance
    end)
    
    if #coins > 0 then
        return {coins[1].coin, coins[1].distance, coins[1].type}
    else
        return {nil, math.huge, nil}
    end
end

local function UpdateNeededTypes()
    NeededCoinTypes = {}
    if activeFarmButton and activeFarmButton.Name == "AUTO_COIN_EGG" then
        NeededCoinTypes.Egg = true
        NeededCoinTypes.Coin = true
        return
    end
    
    for _, coinType in ipairs(CurrentCoinTypes) do
        NeededCoinTypes[coinType] = true
    end
end

local function StartAutofarm()
    AutofarmStarted = true
    AutofarmIN = true
    CollectedCoins = {}
    
    if activeFarmButton and activeFarmButton.Name == "AUTO_COIN_EGG" then
        NeededCoinTypes.Egg = true
        NeededCoinTypes.Coin = true
    end
    
    UpdateNeededTypes()
    
    task.delay(0.5, function()
        if activeFarmButton and activeFarmButton.Name == "AUTO_COIN_EGG" then
            NeededCoinTypes.Egg = true
            NeededCoinTypes.Coin = true
        end
    end)
end

local function StopAutofarm()
    AutofarmStarted = false
    AutofarmIN = false
    if currentTween then
        currentTween:Cancel()
        currentTween = nil
    end
    autofarmstopevent:Fire()
end

local function IsOnCoin()
    if not Player.Character or not Player.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    
    local root = Player.Character.HumanoidRootPart
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {Player.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    
    for x = -1, 1 do
        for z = -1, 1 do
            local offset = Vector3.new(x * 2, 0, z * 2)
            local raycastResult = workspace:Raycast(root.Position + offset, Vector3.new(0, -JUMP_CHECK_DISTANCE, 0), raycastParams)
            if raycastResult and raycastResult.Instance:IsDescendantOf(returncoincontaier()) then
                return true
            end
        end
    end
    return false
end

local function Jump()
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        local humanoid = Player.Character.Humanoid
        humanoid.Jump = true
        local root = Player.Character.HumanoidRootPart
        root.Velocity = Vector3.new(root.Velocity.X, JUMP_HEIGHT * 30, root.Velocity.Z)
    end
end

local function CollectCoin(coin)
    if not coin or not coin:FindFirstChild("TouchInterest") then return end
    
    local jumpCount = 0
    local lastJumpTime = 0
    local startTime = tick()
    LastCoinTouchTime = tick()
    
    while coin:FindFirstChild("TouchInterest") and AutofarmIN do
        if not coin:FindFirstChild("TouchInterest") then break end
        
        if tick() - LastCoinTouchTime > 2.5 and jumpCount < 2 then
            if IsOnCoin() and tick() - lastJumpTime > JUMP_COOLDOWN then
                Jump()
                lastJumpTime = tick()
                jumpCount = jumpCount + 1
            end
        end
        
        task.wait()
    end
end

local function AutoRareEggsB()
    while RareEggsF and task.wait(0.2) do
        if returncoincontaier() and Player:GetAttribute("Alive") and not isAttemptingRareEgg then
            local rareEggs = {}
            for _, egg in pairs(returncoincontaier():GetChildren()) do
                if egg:GetAttribute("CoinID") == "RareEgg" and 
                   egg:FindFirstChildOfClass("MeshPart") and 
                   egg:FindFirstChildOfClass("MeshPart").Transparency < 0.6 then
                    table.insert(rareEggs, egg)
                end
            end
            
            table.sort(rareEggs, function(a, b)
                return (Player.Character.HumanoidRootPart.Position - a.Position).Magnitude < 
                       (Player.Character.HumanoidRootPart.Position - b.Position).Magnitude
            end)
            
            for _, egg in ipairs(rareEggs) do
                local eggId = tostring(egg.Position)
                
                if not processedEggs[eggId] then
                    isAttemptingRareEgg = true
                    processedEggs[eggId] = true
                    
                    PcallTP(egg.CFrame)
                    
                    local startTime = os.time()
                    while os.time() - startTime < RARE_EGG_ATTEMPT_TIME and RareEggsF do
                        if IsOnCoin() and tick() - LastJumpTime > JUMP_COOLDOWN then
                            Jump()
                            LastJumpTime = tick()
                        end
                        task.wait()
                    end
                    
                    if FullEggBag then
                        PcallTP(SavePartPos)
                    end
                    
                    isAttemptingRareEgg = false
                    break
                end
            end
        end
    end
end

-- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ñ–∞—Ä–º–∞
local function DeactivateCurrentFarm()
    if activeFarmButton then
        activeFarmButton.Text = activeFarmButton.Text:gsub(": ON", ": OFF")
        activeFarmButton.BackgroundColor3 = DARK_GRAY_HEADER
        activeFarmButton = nil
    end
end

local function SetFarmType(type, button)
    if activeFarmButton == button then
        DeactivateCurrentFarm()
        StopAutofarm()
        return
    end
    
    DeactivateCurrentFarm()
    
    CurrentCoinTypes = type
    activeFarmButton = button
    
    button.Text = button.Text:gsub(": OFF", ": ON")
    button.BackgroundColor3 = PINK_ACCENT
    
    CollectedCoins = {}
    UpdateNeededTypes()
    
    if AutofarmStarted then
        AutofarmIN = true
    else
        StartAutofarm()
    end
end

local function ToggleEggFarm(button)
    SetFarmType({"Egg"}, button)
end

local function ToggleCoinFarm(button)
    SetFarmType({"Coin"}, button)
end

local function ToggleBothFarm(button)
    if activeFarmButton == button then
        DeactivateCurrentFarm()
        StopAutofarm()
        return
    end
    
    DeactivateCurrentFarm()
    
    CurrentCoinTypes = {"Egg", "Coin"}
    NeededCoinTypes = {Egg = true, Coin = true}
    
    activeFarmButton = button
    button.Text = button.Text:gsub(": OFF", ": ON")
    button.BackgroundColor3 = PINK_ACCENT
    
    CollectedCoins = {}
    NeededCoinTypes.Egg = true
    NeededCoinTypes.Coin = true
    
    if AutofarmStarted then
        AutofarmIN = true
    else
        StartAutofarm()
    end
    
    task.delay(1, function()
        NeededCoinTypes.Egg = true
        NeededCoinTypes.Coin = true
    end)
end

local function ToggleRareEggs(button)
    if RareEggsF then
        RareEggsF = false
        button.Text = button.Text:gsub(": ON", ": OFF")
        button.BackgroundColor3 = DARK_GRAY_HEADER
        CurrentCoinTypes = {"Egg"}
        UpdateNeededTypes()
        return
    end
    
    RareEggsF = true
    button.Text = button.Text:gsub(": OFF", ": ON")
    button.BackgroundColor3 = PINK_ACCENT
    CurrentCoinTypes = {"Egg", "RareEgg"}
    UpdateNeededTypes()
    AutoRareEggsB()
end

-- –§—É–Ω–∫—Ü–∏–∏ ESP
local function IsAlive(Player)
    for i, v in pairs(roles) do
        if Player.Name == i then
            return not v.Killed and not v.Dead
        end
    end
    return false
end

local function CreateHighlight()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= Player and v.Character and not v.Character:FindFirstChild("Highlight") then
            local highlight = Instance.new("Highlight")
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Parent = v.Character
        end
    end
end

local function UpdateHighlights()
    local Murder, Sheriff, Hero
    
    for i, v in pairs(roles) do
        if v.Role == "Murderer" then
            Murder = i
        elseif v.Role == 'Sheriff' then
            Sheriff = i
        elseif v.Role == 'Hero' then
            Hero = i
        end
    end

    for _, v in pairs(Players:GetPlayers()) do
        if v ~= Player and v.Character and v.Character:FindFirstChild("Highlight") then
            local Highlight = v.Character:FindFirstChild("Highlight")
            if v.Name == Sheriff and IsAlive(v) then
                Highlight.FillColor = Color3.fromRGB(0, 0, 255)
                Highlight.OutlineColor = Color3.fromRGB(0, 0, 200)
            elseif v.Name == Murder and IsAlive(v) then
                Highlight.FillColor = Color3.fromRGB(255, 0, 0)
                Highlight.OutlineColor = Color3.fromRGB(200, 0, 0)
            elseif v.Name == Hero and IsAlive(v) and (not Sheriff or not IsAlive(game.Players[Sheriff])) then
                Highlight.FillColor = Color3.fromRGB(255, 255, 0)
                Highlight.OutlineColor = Color3.fromRGB(200, 200, 0)
            else
                Highlight.FillColor = Color3.fromRGB(0, 255, 0)
                Highlight.OutlineColor = Color3.fromRGB(0, 200, 0)
            end
        end
    end
end

local function ToggleESP(button)
    ESPEnabled = not ESPEnabled
    
    if ESPEnabled then
        button.Text = button.Text:gsub(": OFF", ": ON")
        button.BackgroundColor3 = PINK_ACCENT
        spawn(function()
            while ESPEnabled do
                roles = game.ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
                CreateHighlight()
                UpdateHighlights()
                RunService.RenderStepped:Wait()
            end
        end)
    else
        button.Text = button.Text:gsub(": ON", ": OFF")
        button.BackgroundColor3 = DARK_GRAY_HEADER
        for _, v in pairs(Players:GetPlayers()) do
            if v ~= Player and v.Character and v.Character:FindFirstChild("Highlight") then
                v.Character:FindFirstChild("Highlight"):Destroy()
            end
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è —Å–ø–∞–≤–Ω–∞ –æ—Ä—É–∂–∏—è
local function spawnWeapon(name)
    local DataBase, PlayerData = require(game:GetService("ReplicatedStorage").Database.Sync.Item), 
                               require(game:GetService("ReplicatedStorage").Modules.ProfileData)
    local PlayerWeapons = PlayerData.Weapons

    if not PlayerWeapons.Owned[name] then
        PlayerWeapons.Owned[name] = 1
    else
        PlayerWeapons.Owned[name] += 1
    end

    game:GetService("RunService"):BindToRenderStep("InventoryUpdate", 0, function()
        PlayerData.Weapons = PlayerWeapons
    end)

    game.Players.LocalPlayer.Character:BreakJoints()
end

-- –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
local buttonHeight = 35
local buttonSpacing = 10
local startY = 35
local currentY = startY

local function CreateButton(name, text, yPos, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.Size = UDim2.new(0.8, 0, 0, buttonHeight)
    button.Position = UDim2.new(0.1, 0, 0, yPos)
    button.BackgroundColor3 = DARK_GRAY_HEADER
    button.Text = text..": OFF"
    button.TextColor3 = WHITE_TEXT
    button.Font = Enum.Font.FredokaOne
    button.TextSize = 14
    button.TextYAlignment = Enum.TextYAlignment.Center
    button.Parent = MainFrame
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    button.MouseButton1Click:Connect(function()
        callback(button)
    end)
    return button
end

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫
local autoEggBtn = CreateButton("AUTO_EGG", "ü•ö AUTO EGG", currentY, ToggleEggFarm)
currentY = currentY + buttonHeight + buttonSpacing

local autoCoinsBtn = CreateButton("AUTO_COINS", "üí∞ AUTO COINS", currentY, ToggleCoinFarm)
currentY = currentY + buttonHeight + buttonSpacing

local autoBothBtn = CreateButton("AUTO_COIN_EGG", "ü•öüí∞ AUTO COIN & EGG", currentY, ToggleBothFarm)

local BothFarmNote = Instance.new("TextLabel")
BothFarmNote.Name = "BothFarmNote"
BothFarmNote.Size = UDim2.new(0.8, 0, 0, 15)
BothFarmNote.Position = UDim2.new(0.1, 0, 0, currentY + buttonHeight - 3)
BothFarmNote.BackgroundTransparency = 1
BothFarmNote.Text = "Farms both coins and eggs instantly"
BothFarmNote.TextColor3 = GRAY_NOTE
BothFarmNote.Font = Enum.Font.FredokaOne
BothFarmNote.TextSize = 10
BothFarmNote.TextXAlignment = Enum.TextXAlignment.Center
BothFarmNote.TextYAlignment = Enum.TextYAlignment.Center
BothFarmNote.Parent = MainFrame

currentY = currentY + buttonHeight + buttonSpacing

local autoRareBtn = CreateButton("AUTO_RARE_EGGS", "üåü AUTO RARE EGGS", currentY, ToggleRareEggs)

local RareEggNote = Instance.new("TextLabel")
RareEggNote.Name = "RareEggNote"
RareEggNote.Size = UDim2.new(0.8, 0, 0, 15)
RareEggNote.Position = UDim2.new(0.1, 0, 0, currentY + buttonHeight - 3)
RareEggNote.BackgroundTransparency = 1
RareEggNote.Text = "Maybe bugs with egg which you have"
RareEggNote.TextColor3 = GRAY_NOTE
RareEggNote.Font = Enum.Font.FredokaOne
RareEggNote.TextSize = 10
RareEggNote.TextXAlignment = Enum.TextXAlignment.Center
RareEggNote.TextYAlignment = Enum.TextYAlignment.Center
RareEggNote.Parent = MainFrame

currentY = currentY + buttonHeight + buttonSpacing

local ESPButton = Instance.new("TextButton")
ESPButton.Name = "ESP"
ESPButton.Size = UDim2.new(0.8, 0, 0, buttonHeight)
ESPButton.Position = UDim2.new(0.1, 0, 0, currentY)
ESPButton.BackgroundColor3 = DARK_GRAY_HEADER
ESPButton.TextColor3 = WHITE_TEXT
ESPButton.Text = "üëÅÔ∏è ESP: OFF"
ESPButton.Font = Enum.Font.FredokaOne
ESPButton.TextSize = 14
ESPButton.TextYAlignment = Enum.TextYAlignment.Center
ESPButton.Parent = MainFrame

local ESPCorner = Instance.new("UICorner")
ESPCorner.CornerRadius = UDim.new(0, 8)
ESPCorner.Parent = ESPButton

ESPButton.MouseButton1Click:Connect(function()
    ToggleESP(ESPButton)
end)

currentY = currentY + buttonHeight + buttonSpacing

local WeaponBox = Instance.new("TextBox")
WeaponBox.Name = "WeaponBox"
WeaponBox.Size = UDim2.new(0.6, 0, 0, buttonHeight)
WeaponBox.Position = UDim2.new(0.1, 0, 0, currentY)
WeaponBox.BackgroundColor3 = DARK_GRAY_HEADER
WeaponBox.TextColor3 = WHITE_TEXT
WeaponBox.Font = Enum.Font.FredokaOne
WeaponBox.TextSize = 12
WeaponBox.TextYAlignment = Enum.TextYAlignment.Center
WeaponBox.Text = ""
WeaponBox.PlaceholderText = "Enter Weapon Name"
WeaponBox.PlaceholderColor3 = GRAY_NOTE
WeaponBox.Parent = MainFrame

local WeaponCorner = Instance.new("UICorner")
WeaponCorner.CornerRadius = UDim.new(0, 8)
WeaponCorner.Parent = WeaponBox

local SpawnButton = Instance.new("TextButton")
SpawnButton.Name = "SpawnButton"
SpawnButton.Size = UDim2.new(0.18, 0, 0, buttonHeight)
SpawnButton.Position = UDim2.new(0.72, 0, 0, currentY)
SpawnButton.BackgroundColor3 = PINK_ACCENT
SpawnButton.TextColor3 = WHITE_TEXT
SpawnButton.Text = "üì¶ SPAWN"
SpawnButton.Font = Enum.Font.FredokaOne
SpawnButton.TextSize = 12
SpawnButton.TextYAlignment = Enum.TextYAlignment.Center
SpawnButton.Parent = MainFrame

local SpawnCorner = Instance.new("UICorner")
SpawnCorner.CornerRadius = UDim.new(0, 8)
SpawnCorner.Parent = SpawnButton

SpawnButton.MouseButton1Click:Connect(function()
    local weaponName = WeaponBox.Text
    if weaponName ~= "" then
        spawnWeapon(weaponName)
        WeaponBox.Text = ""
    end
end)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∞–≤—Ç–æ—Ñ–∞—Ä–º–∞
spawn(function()
    AntiAFK()
    while task.wait(COLLECTION_SPEED) do
        if AutofarmStarted and AutofarmIN and not isAttemptingRareEgg and Player.Character and returncoincontaier() and Player:GetAttribute("Alive") then
            UpdateHitboxes() -- –û–±–Ω–æ–≤–ª—è–µ–º —Ö–∏—Ç–±–æ–∫—Å—ã
            
            -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è AUTO_COIN_EGG
            if activeFarmButton and activeFarmButton.Name == "AUTO_COIN_EGG" then
                if not NeededCoinTypes.Egg then NeededCoinTypes.Egg = true end
                if not NeededCoinTypes.Coin then NeededCoinTypes.Coin = true end
            end
            
            local coinData = FindNearestCoin(returncoincontaier())
            local coin, distance = coinData[1], coinData[2]
            
            if coin then
                if distance > TELEPORT_DISTANCE then
                    PcallTP(coin.CFrame)
                else
                    if currentTween then
                        currentTween:Cancel()
                    end
                    
                    currentTween = TweenService:Create(
                        Player.Character.HumanoidRootPart,
                        TweenInfo.new(distance / MOVEMENT_SPEED, Enum.EasingStyle.Linear),
                        {CFrame = coin.CFrame}
                    )
                    currentTween:Play()
                    
                    autofarmstopevent.Event:Connect(function()
                        if currentTween then
                            currentTween:Cancel()
                            currentTween = nil
                        end
                    end)
                    
                    repeat 
                        if IsOnCoin() then
                            CollectCoin(coin)
                        end
                        task.wait()
                    until not coin:FindFirstChild("TouchInterest") or not AutofarmIN or isAttemptingRareEgg
                    
                    if currentTween then
                        currentTween:Cancel()
                        currentTween = nil
                    end
                end
            end
        end
    end
end)

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
CoinCollectedEvent.OnClientEvent:Connect(function(cointype, current, max)
    LastCoinTouchTime = tick()
    CollectedCoins[cointype] = {
        current = tonumber(current),
        max = tonumber(max)
    }
    
    UpdateNeededTypes()
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤
    local allFull = true
    for coinType, _ in pairs(NeededCoinTypes) do
        if coinType == "Coin" or coinType == "Egg" then
            if not CollectedCoins[coinType] or CollectedCoins[coinType].current < CollectedCoins[coinType].max then
                allFull = false
                break
            end
        end
    end
    
    -- –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –í–°–ï –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∏–ø—ã
    if allFull then
        AutofarmIN = false
        FullEggBag = true
        CreateSavePart()
        PcallTP(SavePartPos)
    else
        -- –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ñ–∞—Ä–º –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–ø –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω
        AutofarmIN = AutofarmStarted
    end
end)

RoundStartEvent.OnClientEvent:Connect(function()
    CollectedCoins = {}
    processedEggs = {}
    UpdateNeededTypes()
    AutofarmIN = AutofarmStarted
    FullEggBag = false
end)

RoundEndEvent.OnClientEvent:Connect(function()
    AutofarmIN = false
    FullEggBag = false
end)

-- –ó–∞–∫—Ä—ã—Ç–∏–µ GUI
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
    _G.AutoFarmMM2IsLoaded = false
end)